{"version":3,"file":"static/js/215.803fa4d2.chunk.js","mappings":"8PAEMA,EAAW,6CAEXC,EAAkB,CACtBC,QAAS,mCACTC,KAAM,GAGOC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,gFACEJ,EAAgBI,MAAQA,EAAMC,cAAcC,OAC5CC,QAAQC,IAAIR,GACNS,EAAU,IAAIC,gBAAgBV,GAHtC,kBAM2BW,EAAAA,EAAAA,IAAA,UAAaZ,GAAb,OAAwBU,IANnD,cAMUG,EANV,OAOIL,QAAQC,IAAII,GAPhB,kBAQWA,GARX,kCAUIL,QAAQC,IAAI,KAAMK,SAVtB,iFAcA,MAnBA,SAK8B,GAAfV,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCyCf,MA9CA,WAAmB,IAAD,EAChB,GAAwCW,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,qBAApB,QAAqC,GACtD,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAC,EAAAA,EAAAA,YAAU,WACmB,IAAvBP,EAAYQ,QAGhBtB,EAAec,GACZS,MAAK,SAAAd,GACJS,EAAUT,EAASe,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLvB,QAAQC,IAAIsB,EAAMjB,QACnB,GACJ,GAAE,CAACI,KAQF,iCACE,kBAAMc,SAPe,SAAAC,GACvBA,EAAEC,eAAeD,GACjBhB,EAAgB,CAAEC,YAAae,EAAEE,OAAO,GAAGC,OAC5C,EAIG,WACE,4BACE,kBAAOC,KAAK,YAEd,mBAAQA,KAAK,SAAb,wBAEF,wBACGhB,EAAOiB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMpB,GAAlC,SACGgB,KAFIC,EAMZ,QAIR,C,sBCjDD,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBf,EAAQgB,EAAKhB,KAInB,CAHE,MAAOL,GAEP,YADAgB,EAAOhB,EAET,CAEIqB,EAAKC,KACPP,EAAQV,GAERkB,QAAQR,QAAQV,GAAOT,KAAKqB,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMZ,GACbQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQb,EAClE,CAEA,SAASa,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["services/apiName.js","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie?';\n\nconst REQUEST_OPTIONS = {\n  api_key: '2ffe18644d276784f1ed0436b355498e',\n  page: 1,\n};\n\nasync function getMovieByName(query) {\n  REQUEST_OPTIONS.query = query.toLowerCase().trim();\n  console.log(REQUEST_OPTIONS);\n  const options = new URLSearchParams(REQUEST_OPTIONS);\n\n  try {\n    const response = await axios.get(`${BASE_URL}${options}`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport default getMovieByName;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport getMovieByName from '../services/apiName';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie_title = searchParams.get('movieTitle') ?? '';\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movie_title.length === 0) {\n      return;\n    }\n    getMovieByName(movie_title)\n      .then(response => {\n        setMovies(response.data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [movie_title]);\n\n  const handleFormSubmit = e => {\n    e.preventDefault(e);\n    setSearchParams({ movie_title: e.target[0].value });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <label>\n          <input type=\"text\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","REQUEST_OPTIONS","api_key","page","getMovieByName","query","toLowerCase","trim","console","log","options","URLSearchParams","axios","response","message","useSearchParams","searchParams","setSearchParams","movie_title","get","useState","movies","setMovies","location","useLocation","useEffect","length","then","data","results","catch","error","onSubmit","e","preventDefault","target","value","type","map","title","id","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}