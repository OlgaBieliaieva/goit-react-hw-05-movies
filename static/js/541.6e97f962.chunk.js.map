{"version":3,"file":"static/js/541.6e97f962.chunk.js","mappings":";8LAoDA,UA/CA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAQC,OAAOH,GACrB,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAqBA,OAnBAC,QAAQC,IAAIN,IAEZO,EAAAA,EAAAA,YAAU,WACHP,GAKLQ,EAAAA,EAAAA,IAAYR,GACTS,MAAK,SAAAC,GACJL,QAAQC,IAAII,EAASC,MACrBP,EAAQM,EAASC,KAAKR,KACvB,IACAS,OAAM,SAAAC,GACLR,QAAQC,IAAIO,EAAMC,QACnB,IAXDT,QAAQC,IAAI,QAYf,GAAE,CAACN,IAEJK,QAAQC,IAAIH,IAEV,4BACE,iCACCA,EAAKY,OAAS,IACb,wBACGZ,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC1C,OACE,2BACE,gBACEC,IAAG,0CAAqCJ,GACxCK,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeC,OANRC,EASZ,QAKV,qHChDKG,EAAW,sCAEXC,EAAkB,CACtBC,QAAS,oCAGJ,SAASC,EAAaN,GAC3BI,EAAgBG,SAAWP,EAC3Bf,QAAQC,IAAIc,GAEZ,IACE,IAAMV,EAAWkB,EAAAA,EAAAA,IAAA,UACZL,GADY,OACDC,EAAgBG,SADf,oBACmCH,EAAgBC,UAGpE,OADApB,QAAQC,IAAII,GACLA,CAGR,CAFC,MAAOG,GACPR,QAAQC,IAAIO,EAAMC,QACnB,CACF,CAEM,SAASN,EAAYY,GAC1BI,EAAgBG,SAAWP,EAC3Bf,QAAQC,IAAIc,GAEZ,IACE,IAAMV,EAAWkB,EAAAA,EAAAA,IAAA,UACZL,GADY,OACDC,EAAgBG,SADf,4BAC2CH,EAAgBC,UAG5E,OADApB,QAAQC,IAAII,GACLA,CAGR,CAFC,MAAOG,GACPR,QAAQC,IAAIO,EAAMC,QACnB,CACF,CAEM,SAASe,EAAeT,GAC7BI,EAAgBG,SAAWP,EAC3Bf,QAAQC,IAAIc,GAEZ,IACE,IAAMV,EAAWkB,EAAAA,EAAAA,IAAA,UACZL,GADY,OACDC,EAAgBG,SADf,4BAC2CH,EAAgBC,UAG5E,OADApB,QAAQC,IAAII,GACLA,CAGR,CAFC,MAAOG,GACPR,QAAQC,IAAIO,EAAMC,QACnB,CACF","sources":["components/Cast/Cast.js","services/apiId.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from '../../services/apiId';\n//! Prop-types\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const query = Number(movieId);\n  const [cast, setCast] = useState([]);\n\n  console.log(query);\n\n  useEffect(() => {\n    if (!query) {\n      console.log('gjh,b');\n      return;\n    }\n\n    getCastById(query)\n      .then(response => {\n        console.log(response.data);\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [query]);\n\n  console.log(cast);\n  return (\n    <div>\n      <h1>Cast</h1>\n      {cast.length > 0 && (\n        <ul>\n          {cast.map(({ profile_path, name, character, id }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                  alt={name}\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst REQUEST_OPTIONS = {\n  api_key: '2ffe18644d276784f1ed0436b355498e',\n};\n\nexport function getMovieById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getCastById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}/credits?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getReviewsById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}/reviews?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["movieId","useParams","query","Number","useState","cast","setCast","console","log","useEffect","getCastById","then","response","data","catch","error","message","length","map","profile_path","name","character","id","src","alt","BASE_URL","REQUEST_OPTIONS","api_key","getMovieById","movie_id","axios","getReviewsById"],"sourceRoot":""}