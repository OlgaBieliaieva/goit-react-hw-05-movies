{"version":3,"file":"static/js/594.34c5a0f5.chunk.js","mappings":";qPAkBA,MAhBA,YAA8B,IAAdA,EAAa,EAAbA,UACNC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OACE,4BACE,gBAAKC,IAAG,0CAAqCN,GAAeO,IAAKN,KACjE,mCAASA,EAAT,aAAmBC,EAAaM,MAAM,EAAG,GAAzC,QACA,wCAAgBL,EAAaM,QAAQ,OACrC,sCACA,uBAAIL,KACJ,oCACA,uBAAIC,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAG9C,EC4CD,MAvDA,WAAyB,IAAD,IACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,KAAIF,EAAAA,EAAAA,OACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACrDC,EAAQC,OAAOX,GACrB,GAA0BY,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACHL,GAILM,EAAAA,GAAiBN,GACdO,MAAK,SAAAC,GACJhB,QAAQC,IAAIe,EAASC,MACrBL,EAASI,EAASC,KACnB,IACAC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,EAAMC,QACnB,GACJ,GAAE,CAACZ,IAEJR,QAAQC,IAAIU,IAGV,6BACE,0BACE,SAAC,KAAD,CAAMU,GAAIjB,EAAoBkB,QAA9B,8BAEDX,EAAM1B,QACL,iCACE,SAAC,EAAD,CAAMF,UAAW4B,KACjB,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAG,OAAOf,MAAO,CAAEC,KAAML,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMmB,GAAG,UAAUf,MAAO,CAAEC,KAAML,GAAlC,2BAKJ,SAAC,EAAAqB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,qHCzDKC,EAAW,sCAEXC,EAAkB,CACtBC,QAAS,oCAGJ,SAASC,EAAaC,GAC3BH,EAAgBI,SAAWD,EAC3B9B,QAAQC,IAAI6B,GAEZ,IACE,IAAMd,EAAWgB,EAAAA,EAAAA,IAAA,UACZN,GADY,OACDC,EAAgBI,SADf,oBACmCJ,EAAgBC,UAGpE,OADA5B,QAAQC,IAAIe,GACLA,CAGR,CAFC,MAAOG,GACPnB,QAAQC,IAAIkB,EAAMC,QACnB,CACF,CAEM,SAASa,EAAYH,GAC1BH,EAAgBI,SAAWD,EAC3B9B,QAAQC,IAAI6B,GAEZ,IACE,IAAMd,EAAWgB,EAAAA,EAAAA,IAAA,UACZN,GADY,OACDC,EAAgBI,SADf,4BAC2CJ,EAAgBC,UAG5E,OADA5B,QAAQC,IAAIe,GACLA,CAGR,CAFC,MAAOG,GACPnB,QAAQC,IAAIkB,EAAMC,QACnB,CACF,CAEM,SAASc,EAAeJ,GAC7BH,EAAgBI,SAAWD,EAC3B9B,QAAQC,IAAI6B,GAEZ,IACE,IAAMd,EAAWgB,EAAAA,EAAAA,IAAA,UACZN,GADY,OACDC,EAAgBI,SADf,4BAC2CJ,EAAgBC,UAG5E,OADA5B,QAAQC,IAAIe,GACLA,CAGR,CAFC,MAAOG,GACPnB,QAAQC,IAAIkB,EAAMC,QACnB,CACF","sources":["components/Info/Info.js","pages/MovieDetails.jsx","services/apiId.js"],"sourcesContent":["//! Prop-types\n\nfunction Info({ movieInfo }) {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieInfo;\n\n  return (\n    <div>\n      <img src={`https://image.tmdb.org/t/p/w200/${poster_path}`} alt={title} />\n      <h2>{` ${title} (${release_date.slice(0, 4)})`}</h2>\n      <p>User score: {vote_average.toFixed(1)}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres.map(genre => genre.name).join(', ')}</p>\n    </div>\n  );\n}\nexport default Info;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useRef, useEffect, Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport * as Api from '../services/apiId';\nimport Info from '../components/Info/Info';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  console.log(useParams());\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const query = Number(movieId);\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    Api.getMovieById(query)\n      .then(response => {\n        console.log(response.data);\n        setMovie(response.data);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [query]);\n\n  console.log(movie);\n\n  return (\n    <main>\n      <div>\n        <Link to={backLinkLocationRef.current}>â¬… Go back</Link>\n      </div>\n      {movie.title && (\n        <>\n          <Info movieInfo={movie} />\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: location }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst REQUEST_OPTIONS = {\n  api_key: '2ffe18644d276784f1ed0436b355498e',\n};\n\nexport function getMovieById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getCastById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}/credits?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getReviewsById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}/reviews?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["movieInfo","poster_path","title","release_date","vote_average","overview","genres","src","alt","slice","toFixed","map","genre","name","join","movieId","useParams","console","log","location","useLocation","backLinkLocationRef","useRef","state","from","query","Number","useState","movie","setMovie","useEffect","Api","then","response","data","catch","error","message","to","current","Suspense","fallback","Loader","BASE_URL","REQUEST_OPTIONS","api_key","getMovieById","id","movie_id","axios","getCastById","getReviewsById"],"sourceRoot":""}