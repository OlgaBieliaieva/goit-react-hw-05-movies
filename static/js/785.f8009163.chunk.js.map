{"version":3,"file":"static/js/785.f8009163.chunk.js","mappings":";8LAiDA,UA5CA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAQC,OAAOH,GACrB,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,QAAQC,IAAIN,IAEZO,EAAAA,EAAAA,YAAU,WACHP,GAKLQ,EAAAA,EAAAA,IAAeR,GACZS,MAAK,SAAAC,GACJL,QAAQC,IAAII,EAASC,MACrBP,EAAWM,EAASC,KAAKC,QAC1B,IACAC,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,EAAMC,QACnB,IAXDV,QAAQC,IAAI,QAYf,GAAE,CAACN,IAEJK,QAAQC,IAAIH,IAEV,4BACE,oCACCA,EAAQa,OAAS,IAChB,wBACGb,EAAQc,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,GAC3C,OACE,2BACE,oCAAYH,MACZ,qCAAaE,EAAWE,MAAM,EAAG,QACjC,uBAAIH,MAHGE,EAMZ,QAKV,qHC7CKE,EAAW,sCAEXC,EAAkB,CACtBC,QAAS,oCAGJ,SAASC,EAAaL,GAC3BG,EAAgBG,SAAWN,EAC3BhB,QAAQC,IAAIe,GAEZ,IACE,IAAMX,EAAWkB,EAAAA,EAAAA,IAAA,UACZL,GADY,OACDC,EAAgBG,SADf,oBACmCH,EAAgBC,UAGpE,OADApB,QAAQC,IAAII,GACLA,CAGR,CAFC,MAAOI,GACPT,QAAQC,IAAIQ,EAAMC,QACnB,CACF,CAEM,SAASc,EAAYR,GAC1BG,EAAgBG,SAAWN,EAC3BhB,QAAQC,IAAIe,GAEZ,IACE,IAAMX,EAAWkB,EAAAA,EAAAA,IAAA,UACZL,GADY,OACDC,EAAgBG,SADf,4BAC2CH,EAAgBC,UAG5E,OADApB,QAAQC,IAAII,GACLA,CAGR,CAFC,MAAOI,GACPT,QAAQC,IAAIQ,EAAMC,QACnB,CACF,CAEM,SAASP,EAAea,GAC7BG,EAAgBG,SAAWN,EAC3BhB,QAAQC,IAAIe,GAEZ,IACE,IAAMX,EAAWkB,EAAAA,EAAAA,IAAA,UACZL,GADY,OACDC,EAAgBG,SADf,4BAC2CH,EAAgBC,UAG5E,OADApB,QAAQC,IAAII,GACLA,CAGR,CAFC,MAAOI,GACPT,QAAQC,IAAIQ,EAAMC,QACnB,CACF","sources":["components/Reviews/Reviews.js","services/apiId.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from '../../services/apiId';\n//! Prop-types\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const query = Number(movieId);\n  const [reviews, setReviews] = useState([]);\n\n  console.log(query);\n\n  useEffect(() => {\n    if (!query) {\n      console.log('gjh,b');\n      return;\n    }\n\n    getReviewsById(query)\n      .then(response => {\n        console.log(response.data);\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [query]);\n\n  console.log(reviews);\n  return (\n    <div>\n      <h1>Reviews</h1>\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ author, content, created_at, id }) => {\n            return (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>Created: {created_at.slice(0, 10)}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst REQUEST_OPTIONS = {\n  api_key: '2ffe18644d276784f1ed0436b355498e',\n};\n\nexport function getMovieById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getCastById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}/credits?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getReviewsById(id) {\n  REQUEST_OPTIONS.movie_id = id;\n  console.log(id);\n\n  try {\n    const response = axios.get(\n      `${BASE_URL}${REQUEST_OPTIONS.movie_id}/reviews?api_key=${REQUEST_OPTIONS.api_key}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["movieId","useParams","query","Number","useState","reviews","setReviews","console","log","useEffect","getReviewsById","then","response","data","results","catch","error","message","length","map","author","content","created_at","id","slice","BASE_URL","REQUEST_OPTIONS","api_key","getMovieById","movie_id","axios","getCastById"],"sourceRoot":""}